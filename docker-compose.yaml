services:
  backend-for-frontend:
    build:
      context: nodejs/services/backend-for-frontend-nodejs
      dockerfile: Dockerfile
    image: backend-for-frontend-nodejs:latest
    env_file:
      - .env
    ports:
      - "10115:10115"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10115/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 24

  image-picker:
    build:
      context: go/services/image-picker-go
      dockerfile: Dockerfile
    image: image-picker-go:latest
    ports:
      - "10116" 
    environment:
      BUCKET_NAME: random-pictures

  meminator:
    build:
      context: nodejs/services/meminator-nodejs
      dockerfile: Dockerfile
    image: meminator-nodejs:latest
    env_file:
      - .env
    ports:
      - "10117" 

  phrase-picker:
    build:
      context: python/services/phrase-picker-python
      dockerfile: Dockerfile
    image: phrase-picker-python:latest
    ports:
      - "10118"

  web:
    build:
      context: nodejs/services/web
      dockerfile: Dockerfile
    image: web:latest
    # volumes: # uncomment this for faster development on the frontend
    #   - ./services/web/dist:/usr/share/nginx/html # Mount directory containing static files -- only do this for development
    ports:
      - "10114:10114"
    depends_on:
      backend-for-frontend:
        condition: service_healthy
      image-picker:
        condition: service_started
      meminator:
        condition: service_started
      phrase-picker:
        condition: service_started  
  
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./infra/collector.config.yaml:/etc/otel-collector-config.yml
    ports:
      - "4318:4318" # For OTLP gRPC receiver
      - "4317:4317"
    env_file:
      - .env

  refinery:
    image: "honeycombio/refinery"
    env_file:
      - .env
    volumes:
      - ./infra/refinery.config.yaml:/etc/refinery/refinery.yaml
      - ./infra/refinery.rules.yaml:/etc/refinery/rules.yaml